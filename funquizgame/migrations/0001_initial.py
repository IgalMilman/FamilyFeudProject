# Generated by Django 3.2.9 on 2021-11-26 17:47

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('unid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('started_on', models.DateTimeField(blank=True, null=True, verbose_name='Starting time')),
                ('ended_on', models.DateTimeField(blank=True, null=True, verbose_name='Ending time')),
                ('status', models.TextField(choices=[('beg', 'Beginning'), ('st', 'Setting teams'), ('dash', 'Dashboard'), ('ques', 'Question'), ('end', 'Ending')], default='beg', verbose_name='Current game status')),
                ('current_question', models.UUIDField(blank=True, null=True, verbose_name='Current question')),
            ],
        ),
        migrations.CreateModel(
            name='MultiLanguageField',
            fields=[
                ('unid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RealDataAbstract',
            fields=[
                ('unid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funquizgame.game')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerData',
            fields=[
                ('multilanguagefield_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funquizgame.multilanguagefield')),
                ('points_value', models.SmallIntegerField(default=0, verbose_name='Points value')),
                ('people_answered', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of people answered')),
                ('correct_value', models.IntegerField(blank=True, default=None, null=True, verbose_name='Correct value')),
            ],
            bases=('funquizgame.multilanguagefield',),
        ),
        migrations.CreateModel(
            name='QuestionData',
            fields=[
                ('multilanguagefield_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funquizgame.multilanguagefield')),
                ('question_type', models.SmallIntegerField(choices=[(1, 'Enter a number'), (2, 'First button click'), (3, 'Family feud type')], verbose_name='Question type*')),
            ],
            bases=('funquizgame.multilanguagefield',),
        ),
        migrations.CreateModel(
            name='TextField',
            fields=[
                ('unid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sort_order', models.SmallIntegerField(default=0, verbose_name='Order')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Section text')),
                ('related_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funquizgame.multilanguagefield')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('unid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=60, verbose_name='Team Name*')),
                ('number', models.SmallIntegerField(default=0, verbose_name='Team Number')),
                ('points', models.IntegerField(default=0, verbose_name='Number of Points')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funquizgame.game')),
            ],
        ),
        migrations.CreateModel(
            name='RealQuestion',
            fields=[
                ('realdataabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funquizgame.realdataabstract')),
                ('is_shown', models.BooleanField(default=False, verbose_name='Question is shown?')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Question is complete?')),
                ('order', models.SmallIntegerField(verbose_name='Order of the question in the game')),
                ('question_start', models.DateTimeField(blank=True, null=True, verbose_name='Starting time')),
                ('question_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funquizgame.questiondata')),
            ],
            bases=('funquizgame.realdataabstract',),
        ),
        migrations.CreateModel(
            name='RealAnswer',
            fields=[
                ('realdataabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funquizgame.realdataabstract')),
                ('is_shown', models.BooleanField(default=False, verbose_name='Answer is shown?')),
                ('value', models.CharField(blank=True, max_length=70, null=True, verbose_name='Entered value')),
                ('additional_points', models.SmallIntegerField(default=0, verbose_name='Additional points')),
                ('answer_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funquizgame.answerdata')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funquizgame.realquestion')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funquizgame.team')),
            ],
            bases=('funquizgame.realdataabstract',),
        ),
        migrations.AddField(
            model_name='answerdata',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funquizgame.questiondata'),
        ),
    ]
